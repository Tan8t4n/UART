|top
clk => clk.IN1
reset => reset.IN1
switch[0] => switch[0].IN2
switch[1] => switch[1].IN2
switch[2] => switch[2].IN2
switch[3] => switch[3].IN2
switch[4] => switch[4].IN2
switch[5] => switch[5].IN2
switch[6] => switch[6].IN2
switch[7] => switch[7].IN2
tx << uart_tx:uart_tx_inst.tx
led[0] << switch[0].DB_MAX_OUTPUT_PORT_TYPE
led[1] << switch[1].DB_MAX_OUTPUT_PORT_TYPE
led[2] << switch[2].DB_MAX_OUTPUT_PORT_TYPE
led[3] << switch[3].DB_MAX_OUTPUT_PORT_TYPE
led[4] << switch[4].DB_MAX_OUTPUT_PORT_TYPE
led[5] << switch[5].DB_MAX_OUTPUT_PORT_TYPE
led[6] << switch[6].DB_MAX_OUTPUT_PORT_TYPE
led[7] << switch[7].DB_MAX_OUTPUT_PORT_TYPE
led2 << reset.DB_MAX_OUTPUT_PORT_TYPE
segs[0] << ascii_to_7_segment:led_7_seg.seven_seg
segs[1] << ascii_to_7_segment:led_7_seg.seven_seg
segs[2] << ascii_to_7_segment:led_7_seg.seven_seg
segs[3] << ascii_to_7_segment:led_7_seg.seven_seg
segs[4] << ascii_to_7_segment:led_7_seg.seven_seg
segs[5] << ascii_to_7_segment:led_7_seg.seven_seg
segs[6] << ascii_to_7_segment:led_7_seg.seven_seg


|top|uart_tx:uart_tx_inst
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => ready~reg0.CLK
clk => tx~reg0.CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => cycle_count[0].CLK
clk => cycle_count[1].CLK
clk => cycle_count[2].CLK
clk => cycle_count[3].CLK
clk => cycle_count[4].CLK
clk => cycle_count[5].CLK
clk => cycle_count[6].CLK
clk => cycle_count[7].CLK
clk => cycle_count[8].CLK
clk => cycle_count[9].CLK
clk => cycle_count[10].CLK
clk => cycle_count[11].CLK
clk => cycle_count[12].CLK
clk => cycle_count[13].CLK
clk => cycle_count[14].CLK
clk => cycle_count[15].CLK
clk => state~5.DATAIN
reset => shift_reg[0].ACLR
reset => shift_reg[1].ACLR
reset => shift_reg[2].ACLR
reset => shift_reg[3].ACLR
reset => shift_reg[4].ACLR
reset => shift_reg[5].ACLR
reset => shift_reg[6].ACLR
reset => shift_reg[7].ACLR
reset => ready~reg0.PRESET
reset => tx~reg0.PRESET
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => cycle_count[0].ACLR
reset => cycle_count[1].ACLR
reset => cycle_count[2].ACLR
reset => cycle_count[3].ACLR
reset => cycle_count[4].ACLR
reset => cycle_count[5].ACLR
reset => cycle_count[6].ACLR
reset => cycle_count[7].ACLR
reset => cycle_count[8].ACLR
reset => cycle_count[9].ACLR
reset => cycle_count[10].ACLR
reset => cycle_count[11].ACLR
reset => cycle_count[12].ACLR
reset => cycle_count[13].ACLR
reset => cycle_count[14].ACLR
reset => cycle_count[15].ACLR
reset => state~7.DATAIN
data[0] => Selector8.IN2
data[1] => Selector7.IN2
data[2] => Selector6.IN2
data[3] => Selector5.IN2
data[4] => Selector4.IN2
data[5] => Selector3.IN2
data[6] => Selector2.IN2
data[7] => Selector1.IN2
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|ascii_to_7_segment:led_7_seg
ascii_code[0] => Decoder0.IN7
ascii_code[1] => Decoder0.IN6
ascii_code[2] => Decoder0.IN5
ascii_code[3] => Decoder0.IN4
ascii_code[4] => Decoder0.IN3
ascii_code[5] => Decoder0.IN2
ascii_code[6] => Decoder0.IN1
ascii_code[7] => Decoder0.IN0
seven_seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seven_seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seven_seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seven_seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seven_seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seven_seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seven_seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


